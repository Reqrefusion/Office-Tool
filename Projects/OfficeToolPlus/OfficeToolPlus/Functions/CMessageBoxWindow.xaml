<Window x:Name="Window" x:Class="Zmy.Wpf.CMessageBox.CMessageBoxWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" WindowStartupLocation="CenterOwner"
        Foreground="Black" BorderBrush="#FFEB3C00" MaxHeight="600" Width="500" ResizeMode="NoResize" 
        Title="{Binding MessageBoxTitle}" SizeToContent="Height" Loaded="Window_Loaded" MinHeight="230" UseLayoutRounding="True"
        Activated="Window_Activated" Deactivated="Window_Deactivated" Icon="/Office Tool Plus;component/Image/FIRSTRUN 001.ico">
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="1" CornerRadius="0" CaptionHeight="30"/>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <Style TargetType="{x:Type Button}" x:Key="HeaderButtonStyle">
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#333A2820"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#663A2820"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="NormalButtonStyle">
            <Setter Property="Foreground" Value="{Binding BorderBrush, ElementName=Window}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="Margin" Value="15,0"/>
            <Setter Property="IsDefault" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{Binding BorderBrush, ElementName=Window}" BorderThickness="1" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#26008CFF"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#3F008CFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="NotNormalButtonStyle">
            <Setter Property="Foreground" Value="{Binding Foreground, ElementName=Window}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="MinWidth" Value="80"/>
            <Setter Property="Margin" Value="15,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="#FF8C8C8C" BorderThickness="1" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#264B4B4B"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#3F4B4B4B"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{Binding Foreground, ElementName=Window}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border Background="Transparent">
                            <DockPanel HorizontalAlignment="Left">
                                <Border x:Name="CheckFlag" Height="18" Width="18" DockPanel.Dock="Left" BorderBrush="{Binding BorderBrush, ElementName=Window}" BorderThickness="2" Background="Transparent" CornerRadius="9">
                                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Path Visibility="Collapsed" Height="12" Width="12" x:Name="CheckMark" Stretch="Fill" Fill="{Binding BorderBrush, ElementName=Window}" Data=" M 86.1 15.8 L 34.9 64.2 L 10.3 39 L 1.8 47.1 L 34.5 80.7 L 43.1 72.7 L 94.2 24.2 Z"/>
                                        <Border Visibility="Collapsed" Height="8" Width="8" CornerRadius="4" x:Name="InderminateMark" Background="{Binding BorderBrush, ElementName=Window}"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter DockPanel.Dock="Right" Margin="5,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </DockPanel>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InderminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="InderminateMark" Property="Background" Value="Gray"/>
                                <Setter TargetName="CheckMark" Property="Fill" Value="Gray"/>
                                <Setter TargetName="CheckFlag" Property="BorderBrush" Value="Gray"/>
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo Description="{Binding Title, ElementName=Window}">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfo Description="{DynamicResource MsgButtonOK}" Visibility="{Binding Visibility, ElementName=OKButton}" Click="OKButton_Click" ImageSource="/Office Tool Plus;component/Image/Yes.png"/>
                <ThumbButtonInfo Description="{DynamicResource MsgButtonCancel}" Visibility="{Binding Visibility, ElementName=CancelButton}" ImageSource="/Office Tool Plus;component/Image/No.png" Click="CancelButton_Click"/>
                <ThumbButtonInfo Description="{DynamicResource MsgButtonYes}" Visibility="{Binding Visibility, ElementName=YesButton}" ImageSource="/Office Tool Plus;component/Image/Yes.png" Click="YesButton_Click"/>
                <ThumbButtonInfo Description="{DynamicResource MsgButtonNo}" Visibility="{Binding Visibility, ElementName=NoButton}" ImageSource="/Office Tool Plus;component/Image/No.png" Click="NoButton_Click"/>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Background="{Binding Background, ElementName=Window}">
            <Button Click="CloseWindowButton_Click" Style="{DynamicResource HeaderButtonStyle}" IsCancel="True" Width="35">
                <Canvas>
                    <Line X1="-5" Y1="-5" X2="5" Y2="5" Stroke="{Binding BorderBrush, ElementName=Window}"/>
                    <Line X1="-5"  Y1="5" X2="5" Y2="-5" Stroke="{Binding BorderBrush, ElementName=Window}"/>
                </Canvas>
            </Button>
            <WrapPanel HorizontalAlignment="Left" ItemHeight="35">
                <Path WindowChrome.IsHitTestVisibleInChrome="True" FlowDirection="LeftToRight" Data="M207,94 L230,100 230,160 207,166 170,151.42 207,157 207,105 181,113 181,145 170,151 170,110 z" Height="20" Stretch="Fill" Width="17" Margin="12,7.5,8,7.5" VerticalAlignment="Center" Fill="{Binding Foreground, ElementName=WindowTitle}"/>
                <TextBlock x:Name="WindowTitle" Foreground="{Binding BorderBrush, ElementName=Window}" Text="Office Tool Plus" VerticalAlignment="Center" FlowDirection="LeftToRight"/>
            </WrapPanel>
        </Grid>
        <Grid Background="{Binding Background, ElementName=Window}" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>
            <WrapPanel Margin="25,30,25,5" Focusable="False">
                <Path x:Name="IconPath" Width="25" Height="25" Data="M1024,512c0,282.8-229.2,512-512,512S0,794.8,0,512S229.2,0,512,0S1024,229.2,1024,512z M511,723.8c22,0,40.8,7.1,56.5,21.3c15.6,14.2,23.5,31.4,23.5,51.7c0,19.7-7.8,36.7-23.5,50.8S533,869,511,869   c-22,0-40.7-7.1-56.1-21.3c-15.4-14.2-23-31.1-23-50.8c0-20.3,7.7-37.5,23-51.7C470.3,730.9,489,723.8,511,723.8z M580.5,184.5   l-16.1,468H456.7l-15.2-468H580.5z" Stretch="Uniform"/>
                <TextBlock Text="{Binding MessageBoxTitle}" FontSize="18" Foreground="{Binding BorderBrush, ElementName=Window}" VerticalAlignment="Center" Margin="5,0,0,0"/>
            </WrapPanel>
            <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalAlignment="Top" Grid.Row="1" Margin="0,10,0,30">
                <TextBlock Text="{Binding MessageBoxText}" TextWrapping="Wrap" Margin="25,0"/>
            </ScrollViewer>
            <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalAlignment="Top" Grid.Row="1" Margin="0,10,0,30" CanContentScroll="True">
                <RichTextBox x:Name="richTextBox" Background="Transparent" Foreground="{Binding Foreground, ElementName=Window}" Margin="25,0" BorderThickness="0" IsReadOnly="True" IsDocumentEnabled="True" Visibility="Collapsed"/>
            </ScrollViewer>
            <WrapPanel Grid.Row="2" HorizontalAlignment="Right" ItemHeight="35">
                <Button Content="{DynamicResource MsgButtonOK}" x:Name="OKButton" Click="OKButton_Click" Style="{StaticResource NormalButtonStyle}" Visibility="{Binding OKButtonVisibility, Mode=OneWay}"/>
                <Button Content="{DynamicResource MsgButtonYes}" x:Name="YesButton" Click="YesButton_Click" Style="{StaticResource NormalButtonStyle}" Visibility="{Binding YesButtonVisibility, Mode=OneWay}"/>
                <Button Content="{DynamicResource MsgButtonNo}" x:Name="NoButton" Click="NoButton_Click" Style="{StaticResource NotNormalButtonStyle}" Visibility="{Binding NoButtonVisibility, Mode=OneWay}"/>
                <Button Content="{DynamicResource MsgButtonCancel}" x:Name="CancelButton" Click="CancelButton_Click" Style="{StaticResource NotNormalButtonStyle}" Visibility="{Binding CancelButtonVisibility, Mode=OneWay}"/>
            </WrapPanel>
            <CheckBox x:Name="ApplyToAll" Content="{DynamicResource MsgApplyToAll}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10,0,0,15" Grid.Row="2" Visibility="{Binding ApplyToAllVisibility, Mode=OneWay}"/>
        </Grid>
    </Grid>
</Window>